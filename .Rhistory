geom_vline(xintercept = -0.25, color = palette_light()[[5]], size = 1, linetype = 2) +
geom_vline(xintercept = 0.25, color = palette_light()[[5]], size = 1, linetype = 2) +
# Aesthetics
theme_tq() +
labs(title = textforheading,
subtitle = "Positive Correlations (prevent defaulter), Negative Correlations (contribute to defaulters)",
y = "Feature Importance")
return(plot)
}
correlation_plot(filter(clean.data,clean.data$purpose %in% c("major_purchase")),"Correlation Analysis for major purchase")
#contribution apart from that other major variables that contribute to correlation in
#major purchase are
# 1)recoverries
# 2)collection_recovery_fee
# 3)bin_int_rate
# 4)grade
# 5)bin_dti
# 6)year
# 7)home_ownership
#
correlation_plot(filter(clean.data,clean.data$purpose %in% c("home_improvement")),"Correlation Analysis for home Improvement")
#contribution apart from that other major variables that contribute to correlation in
#home improvement are
# 1)recoverries
# 2)collection_recovery_fee
# 3)bin_int_rate
# 4)grade
# 5)bin_funed_amt_invested
# 6)term
# 7)bin_dti
#
correlation_plot(filter(clean.data,clean.data$purpose %in% c("credit_card")),"Correlation Analysis for Credit Card")
#contribution apart from that other major variables that contribute to correlation in
#credit card are
# 1)recoverries
# 2)bin_funed_amt_invested
# 3)term
# 4)collection_recovery_fee
# 5)bin_dti
# 6)bin_int_rate
# 7)grade
#
correlation_plot(filter(clean.data,clean.data$purpose %in% c("debt_consolidation")),"Correlation Analysis for Debt Consolidation")
# Feature correlations to the purpose
correlation_plot<- function(pur,textforheading){
clean.data.numeric <- pur
clean.data.numeric$loan_status <- ifelse(clean.data.numeric$loan_status=="Charged Off",1,0)
clean.data.numeric[sapply(clean.data.numeric, is.character)] <- lapply(clean.data.numeric[sapply(clean.data, is.character)],
as.factor)
clean.data.numeric[sapply(clean.data.numeric, is.integer)] <- lapply(clean.data.numeric[sapply(clean.data, is.integer)],
as.numeric)
clean.data.numeric[sapply(clean.data.numeric, is.factor)] <- lapply(clean.data.numeric[sapply(clean.data, is.factor)],
as.numeric)
clean.data.numeric$issue_d <- NULL
clean.data.numeric$sub_grade <- NULL
clean.data.numeric$purpose <- NULL
clean.data.numeric$loan_statusChrgedOff <- NULL
clean.data.numeric$loan_statusCurrent <- NULL
clean.data.numeric$pymnt_plan <- NULL
clean.data.numeric$loan_amnt<-NULL
clean.data.numeric$funded_amnt_inv <-NULL
clean.data.numeric$dti<- NULL
clean.data.numeric$funded_amnt <- NULL
clean.data.numeric$installment <- NULL
clean.data.numeric$annual_inc <- NULL
clean.data.numeric$emp_length <- NULL
clean.data.numeric$int_rate <- NULL
corrr_analysis <- clean.data.numeric %>%
correlate() %>%
focus(loan_status) %>%
rename(feature = rowname) %>%
arrange(abs(loan_status)) %>%
mutate(feature = as.factor(feature))
corrr_analysis
# Correlation visualization
plot <- corrr_analysis %>%
ggplot(aes(x = loan_status, y = fct_reorder(feature, desc(loan_status)))) +
geom_point() +
# Positive Correlations - Contribute to churn
geom_segment(aes(xend = 0, yend = feature),
color = palette_light()[[2]],
data = corrr_analysis %>% filter(loan_status > 0)) +
geom_point(color = palette_light()[[2]],
data = corrr_analysis %>% filter(loan_status > 0)) +
# Negative Correlations - Prevent churn
geom_segment(aes(xend = 0, yend = feature),
color = palette_light()[[1]],
data = corrr_analysis %>% filter(loan_status < 0)) +
geom_point(color = palette_light()[[1]],
data = corrr_analysis %>% filter(loan_status < 0)) +
# Vertical lines
geom_vline(xintercept = 0, color = palette_light()[[5]], size = 1, linetype = 2) +
geom_vline(xintercept = -0.25, color = palette_light()[[5]], size = 1, linetype = 2) +
geom_vline(xintercept = 0.25, color = palette_light()[[5]], size = 1, linetype = 2) +
# Aesthetics
theme_tq() +
labs(title = textforheading,
subtitle = "Positive Correlations (contribute to defaulters), Negative Correlations (prevent defaulter)",
y = "Feature Importance")
return(plot)
}
#contribution apart from that other major variables that contribute to correlation in
#credit card are
# 1)recoverries
# 2)bin_funed_amt_invested
# 3)term
# 4)collection_recovery_fee
# 5)bin_dti
# 6)bin_int_rate
# 7)grade
#
correlation_plot(filter(clean.data,clean.data$purpose %in% c("debt_consolidation")),"Correlation Analysis for Debt Consolidation")
#contribution apart from that other major variables that contribute to correlation in
#home improvement are
# 1)recoverries
# 2)collection_recovery_fee
# 3)bin_int_rate
# 4)grade
# 5)bin_funed_amt_invested
# 6)term
# 7)bin_dti
#
correlation_plot(filter(clean.data,clean.data$purpose %in% c("credit_card")),"Correlation Analysis for Credit Card")
#contribution apart from that other major variables that contribute to correlation in
#major purchase are
# 1)recoverries
# 2)collection_recovery_fee
# 3)bin_int_rate
# 4)grade
# 5)bin_dti
# 6)year
# 7)home_ownership
#
correlation_plot(filter(clean.data,clean.data$purpose %in% c("home_improvement")),"Correlation Analysis for home Improvement")
product_wise_fill(clean.data,clean.data$emp_length,"Applicant Experience Distribution- Top-4 products")
univariate_categorical(clean.data,clean.data$bin_loan_amnt)
univariate_categorical(clean.data,clean.data$bin_loan_amnt,"hghj")
univariate_categorical_fill(clean.data,clean.data$bin_loan_amnt,"hghj")
univariate_categorical_fill(clean.data,clean.data$loan_status,clean.data$bin_loan_amnt,"hghj")
univariate_categorical_fill(clean.data,clean.data$loan_status,clean.data$bin_loan_amnt,"hghj","")
univariate_categorical_fill_dodge(clean.data,clean.data$loan_status,clean.data$purpose,"Understanding the top contributor for defaulters","purpose")
univariate_categorical_fill_dodge(clean.data,clean.data$loan_status,clean.data$bin_loan_amnt,"hghj","")
univariate_categorical_fill_dodge(clean.data,clean.data$bin_loan_amnt,clean.data$loan_status,"hghj","")
univariate_categorical_fill_dodge(filter(clean.data,clean.data %in% c("Charged Off")),clean.data$bin_loan_amnt,clean.data$loan_status,"hghj","")
univariate_categorical_fill_dodge(filter(clean.data,clean.data$loan_status %in% c("Charged Off")),clean.data$bin_loan_amnt,clean.data$loan_status,"hghj","")
univariate_categorical(filter(clean.data,clean.data$loan_status %in% c("Charged Off")),"")
univariate_categorical(filter(clean.data,clean.data$loan_status %in% c("Charged Off")),clean.data$loan_status,"")
bin_loan_amnt
bin
loan_status
univariate_categorical(clean.data,clean.data$bin_loan_amnt,"hghj")
univariate_categorical(filter(clean.data,clean.data$loan_status %in% c("Charged off")),clean.data$bin_loan_amnt,"hghj")
defaulte.clean.data <- filter(clean.data,clean.data$loan_status %in% c("Charged off")
)
defaulte.clean.data <- filter(clean.data,clean.data$loan_status %in% c("Charged Off"))
univariate_categorical(defaulte.clean.data,defaulte.clean.data$bin_loan_amnt,"hghj")
univariate_categorical(defaulte.clean.data,defaulte.clean.data$bin_loan_amnt,"bin based on loan amount")
univariate_categorical(defaulte.clean.data,defaulte.clean.data$bin_loan_amnt,"bin based on loan amount and defaulters")
clean.data$bin_funded_amnt_inv<-ifelse(clean.data$funded_amnt_inv<=5000,"Small",
ifelse(clean.data$funded_amnt_inv>5000 & clean.data$funded_amnt_inv<=15000,"Medium",
ifelse(clean.data$funded_amnt_inv>15000 & clean.data$funded_amnt_inv<=25000,"High","VeryHigh")))
defaulte.clean.data <- filter(clean.data,clean.data$loan_status %in% c("Charged Off"))
univariate_categorical(defaulte.clean.data,defaulte.clean.data$bin_funded_amnt_inv,"bin based on loan amount and defaulters")
clean.data$bin_int_rate<-ifelse(clean.data$int_rate<=10,"Low_rate",
ifelse(clean.data$int_rate>10 & clean.data$int_rate<=15,"Medium_rate","High_rate"))
defaulte.clean.data <- filter(clean.data,clean.data$loan_status %in% c("Charged Off"))
univariate_categorical(defaulte.clean.data,defaulte.clean.data$bin_int_rate,"bin based on loan amount and defaulters")
univariate_categorical(defaulte.clean.data,defaulte.clean.data$bin_int_rate,"bin based on interest rate and defaulters")
describe(clean.data$dti)
clean.data$bin_dti<-ifelse(clean.data$dti<=10,"Low_dti",
ifelse(clean.data$dti>10 & clean.data$dti<=20,"Medium_dti","High_dti"))
describe(clean.data$funded_amnt)
clean.data$bin_funded_amnt<-ifelse(clean.data$funded_amnt<=5000,"Small",
ifelse(clean.data$funded_amnt>5000 & clean.data$funded_amnt<=15000,"Medium",
ifelse(clean.data$funded_amnt>15000 & clean.data$funded_amnt<=25000,"High","VeryHigh")))
describe(clean.data$installment)
clean.data$bin_installment<-ifelse(clean.data$installment<=200,"Small",
ifelse(clean.data$installment>200 & clean.data$installment<=400,"Medium",
ifelse(clean.data$installment>400 & clean.data$installment<=600,"High","VeryHigh")))
defaulte.clean.data <- filter(clean.data,clean.data$loan_status %in% c("Charged Off"))
univariate_categorical(defaulte.clean.data,defaulte.clean.data$bin_installment,"bin based on interest rate and defaulters")
univariate_categorical(defaulte.clean.data,defaulte.clean.data$bin_installment,"bin based on installment and defaulters")
univariate_categorical(defaulte.clean.data,defaulte.clean.data$bin_annual_inc,"bin based on installment and defaulters")
defaulte.clean.data <- filter(clean.data,clean.data$loan_status %in% c("Charged Off"))
univariate_categorical(defaulte.clean.data,defaulte.clean.data$bin_annual_inc,"bin based on installment and defaulters")
correlation_plot(clean.data,"Correlation Analysis for Debt Consolidation")
correlation_plot(clean.data,"Correlation Analysis")
setwd("F:/Computer_science/ML/UPGRAD/EDA case Study")
SDS_PATH <- file.path("F:/Computer_science/ML/UPGRAD/EDA case Study")
library(rsample)
library(recipes)
library(dplyr)
library(ggplot2)
library(data.table)
library(stringr)
library(DT)
library(tidyr)
library(corrplot)
library(leaflet)
library(lubridate)
library(scales)
library(corrr)
library(Hmisc)
library(tidyquant)
library(rsample)
library(recipes)
library(yardstick)
library(corrr)
raw.loan.data <- read.csv("loan.csv",stringsAsFactors = F)
head(raw.loan.data)
glimpse(raw.loan.data)
loan.removed.columns <-raw.loan.data %>% select(-c(total_il_high_credit_limit,total_bc_limit,total_bal_ex_mort,tot_hi_cred_lim,
percent_bc_gt_75,pct_tl_nvr_dlq,num_tl_op_past_12m,num_tl_90g_dpd_24m,num_tl_30dpd,
num_tl_120dpd_2m,num_sats,num_rev_tl_bal_gt_0,num_rev_accts,num_op_rev_tl,num_il_tl,
num_bc_tl,num_bc_sats,num_actv_rev_tl,num_actv_bc_tl,num_actv_bc_tl,mths_since_recent_revol_delinq,
mths_since_recent_inq,mths_since_recent_bc_dlq,mths_since_recent_bc,mort_acc,mo_sin_rcnt_tl,
mo_sin_rcnt_rev_tl_op,mo_sin_old_rev_tl_op,mo_sin_old_il_acct,delinq_amnt,bc_util,
bc_open_to_buy,avg_cur_bal,acc_open_past_24mths,inq_last_12m,total_cu_tl,inq_fi,
total_rev_hi_lim,all_util,max_bal_bc,open_rv_24m,open_rv_12m,il_util,total_bal_il,
mths_since_rcnt_il,open_il_24m,open_il_12m,open_il_6m,open_acc_6m,tot_cur_bal,tot_coll_amt,
acc_now_delinq,verification_status_joint,dti_joint,annual_inc_joint,mths_since_last_major_derog,
num_accts_ever_120_pd,mths_since_last_record,mths_since_last_delinq))
glimpse(loan.removed.columns)
missing_values <- loan.removed.columns %>% summarise_all(funs(sum(is.na(.))/n()))
missing_values <- gather(missing_values,key='feature',value = 'missing_percentage')
plot <- missing_values %>%
ggplot(aes(x=reorder(feature,-missing_percentage),y=missing_percentage)) +
geom_bar(stat = 'identity',fill='red') +
coord_flip()
plot
clean.data <- loan.removed.columns %>% select(-c(tax_liens,initial_list_status,chargeoff_within_12_mths,pub_rec_bankruptcies,application_type,policy_code,collections_12_mths_ex_med))
good_features <- filter(missing_values,missing_percentage<0.15)
good_features <- (good_features$feature)
clean.data <- clean.data[,(colnames(clean.data) %in% good_features)]
summary(clean.data)
a <- clean.data %>%
summarise_all(funs(sum(is.na(.))))
sum(is.na(clean.data))
colnames(clean.data)
ncol(clean.data)
nrow(clean.data)
clean.data <- na.omit(clean.data)
sum(is.na(clean.data))
ggplot(clean.data,aes(x=factor(loan_status)))+geom_bar(stat='count',position = "dodge")
ggplot(clean.data,aes(x=factor(loan_status),fill=factor(home_ownership)))+geom_bar(stat='count')
ggplot(clean.data,aes(x=factor(loan_status),fill=factor(verification_status)))+geom_bar(stat='count')
ggplot(clean.data,aes(x=factor(loan_status),fill=factor(grade)))+geom_bar(stat='count')
clean.data$loan_statusCurrent <- ifelse(clean.data$loan_status=="Current",1,0)
current <- mean(clean.data$loan_statusCurrent)
clean.data$loan_statusChrgedOff <- ifelse(clean.data$loan_status=="Charged Off",1,0)
chargedOff <- mean(clean.data$loan_statusChrgedOff)
clean.data$loan_statusCurrent <- ifelse(clean.data$loan_status=="Fully Paid",1,0)
fullypaid<- mean(clean.data$loan_statusCurrent)
total <- current+chargedOff+fullypaid
ggplot(filter(clean.data,loan_status %in% c("Charged Off")),aes(x=factor(home_ownership)))+geom_bar(stat='count',position = "dodge")
verification.status <- ggplot(filter(clean.data,loan_status %in% c("Charged Off")),aes(x=factor(loan_status),fill=factor(verification_status)))+geom_bar(stat='count',position = "dodge")
verification.status
grade <- ggplot(filter(clean.data,loan_status %in% c("Charged Off")),aes(x=factor(loan_status),fill=factor(grade)))+geom_bar(stat='count',position = "dodge")
grade
#now lets convert all the character to factors
clean.data[sapply(clean.data, is.character)] <- lapply(clean.data[sapply(clean.data, is.character)],
as.factor)
univariate_categorical <- function(dataset,var,var_name){
dataset %>% ggplot(aes(x = as.factor(var))) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
scale_y_continuous(labels = percent) +
labs(title = var_name, y = "Percent", x = var_name)+theme(
axis.text.y=element_blank(), axis.ticks=element_blank(),
axis.title.y=element_blank(),axis.text.x = element_text(angle = 60, hjust = 1)
)
}
univariate_categorical_fill <- function(dataset,var,filname,var_name,filname1){
dataset %>% ggplot(aes(x = as.factor(var),fill=filname)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
labs(title = var_name, y = "Percent", x = var_name,fill=filname1)+theme(
axis.text.y=element_blank(), axis.ticks=element_blank(),
axis.title.y=element_blank(),axis.text.x = element_text(angle = 60, hjust = 1),
)
}
univariate_categorical_fill_dodge <- function(dataset,var,filname,var_name,filname1){
dataset %>% ggplot(aes(x = as.factor(var),fill=filname)) +
geom_bar(aes(y = (..count..)/sum(..count..)),position = "dodge") +
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
labs(title = var_name, y = "Percent", x = var_name,fill=filname1)+theme(
axis.text.y=element_blank(), axis.ticks=element_blank(),
axis.title.y=element_blank(),axis.text.x = element_text(angle = 60, hjust = 1),
)
}
glimpse(clean.data)
univariate_categorical(clean.data,clean.data$loan_status,"Default Distribution on status")
univariate_categorical(clean.data,clean.data$purpose,"Default Distribution on status")
univariate_categorical_fill(clean.data,clean.data$loan_status,clean.data$purpose,"Understanding the top contributor for defaulters","purpose")
#from the above graph we see that debtconsolidation is the major purpose for the loan.
#and most of the defaultors also in the debt consolidation brackect
#altought many of the debt consolidator have fully paid the loan
#debt consolidation 46.9%
#creditcard 12.9%
#home_improvement 7.5%
#major_purchase 5.4%
#others 10.1%
#let us now filter out the purpose whose contribution is less than 5% and remove
#the others as it does not give us any inference
clean.data <- filter(clean.data,clean.data$purpose %in% c("debt_consolidation","credit_card","home_improvement","major_purchase"))
univariate_categorical(clean.data,clean.data$purpose,"Default Distribution on status after filter")
univariate_categorical_fill(clean.data,clean.data$loan_status,clean.data$purpose,"fill based on purpose and loan status after filter","purpose")
#term
#imp
univariate_categorical(clean.data,clean.data$term,"Default Distribution on term")
#72.7% overall loan on 36month term
#27.3% overall loan on 60month term
#imp
univariate_categorical_fill_dodge(clean.data,clean.data$loan_status,clean.data$term,"distribution and fill based on purpose and loan status and term","terms")
univariate_categorical_fill(clean.data,clean.data$purpose,clean.data$term,"fill based on purpose and term","purpose")
clean.data$issue_d <- paste("01-",clean.data$issue_d,sep="")
clean.data$issue_d <- as.Date(clean.data$issue_d,"%d-%B-%y")
clean.data$year <- as.factor(format(clean.data$issue_d,"%Y"))
#percentage based on the year of loan issue
univariate_categorical(clean.data,clean.data$year,"Distribution based on the yearly basis")
clean.data$loanbyfunded <- clean.data$funded_amnt/clean.data$loan_amnt
product_wise <- function(dataset,var,var_name){
dataset %>% ggplot(aes(x = as.factor(var))) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
scale_y_continuous(labels = percent) +
labs(title = var_name, y = "Percent", x = var_name)+theme(
axis.text.y=element_blank(), axis.ticks=element_blank(),
axis.title.y=element_blank(),axis.text.x = element_text(angle = 30, hjust = 1)
)+facet_wrap(~purpose)
}
product_wise_fill <- function(dataset,var,var_name){
dataset %>% ggplot(aes(x = as.factor(var),fill=loan_status)) +
geom_bar(aes(y = (..count..)/sum(..count..)),position = "dodge",jitter=T) +
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
scale_y_continuous(labels = percent) +
labs(title = var_name, y = "Percent", x = var_name)+theme(
axis.text.y=element_blank(), axis.ticks=element_blank(),
axis.title.y=element_blank(),axis.text.x = element_text(angle = 30, hjust = 1)
) +facet_wrap(~purpose)
}
product_wise(clean.data,clean.data$year,"purpose Distribution 2007-2011 ")
product_wise_fill(clean.data,clean.data$year,"purpose Distribution 2007-2011 based on fill ")
product_wise_fill(clean.data,clean.data$grade,"based on grade")
clean.data$int_rate <- extract_numeric(clean.data$int_rate)
#lets calculate the mean for each grade
tapply(clean.data$int_rate,clean.data$grade, mean)
#we see that grade e,f,g are given loans with high interest but they are the customers who pay the loan
#very promptly.in the other words less interest is causing more defaulters
#lets calculate the mean for each ppurpose
tapply(clean.data$int_rate,clean.data$purpose, mean)
clean.data$bin_loan_amnt<-ifelse(clean.data$loan_amnt<=5000,"Small",
ifelse(clean.data$loan_amnt>5000 & clean.data$loan_amnt<=15000,"Medium",
ifelse(clean.data$loan_amnt>15000 & clean.data$loan_amnt<=25000,"High","VeryHigh")))
defaulte.clean.data <- filter(clean.data,clean.data$loan_status %in% c("Charged Off"))
univariate_categorical(defaulte.clean.data,defaulte.clean.data$bin_loan_amnt,"bin based on loan amount and defaulters")
clean.data$bin_funded_amnt_inv<-ifelse(clean.data$funded_amnt_inv<=5000,"Small",
ifelse(clean.data$funded_amnt_inv>5000 & clean.data$funded_amnt_inv<=15000,"Medium",
ifelse(clean.data$funded_amnt_inv>15000 & clean.data$funded_amnt_inv<=25000,"High","VeryHigh")))
defaulte.clean.data <- filter(clean.data,clean.data$loan_status %in% c("Charged Off"))
univariate_categorical(defaulte.clean.data,defaulte.clean.data$bin_funded_amnt_inv,"bin based on loan amount and defaulters")
clean.data$bin_int_rate<-ifelse(clean.data$int_rate<=10,"Low_rate",
ifelse(clean.data$int_rate>10 & clean.data$int_rate<=15,"Medium_rate","High_rate"))
defaulte.clean.data <- filter(clean.data,clean.data$loan_status %in% c("Charged Off"))
univariate_categorical(defaulte.clean.data,defaulte.clean.data$bin_int_rate,"bin based on interest rate and defaulters")
describe(clean.data$dti)
clean.data$bin_dti<-ifelse(clean.data$dti<=10,"Low_dti",
ifelse(clean.data$dti>10 & clean.data$dti<=20,"Medium_dti","High_dti"))
describe(clean.data$funded_amnt)
clean.data$bin_funded_amnt<-ifelse(clean.data$funded_amnt<=5000,"Small",
ifelse(clean.data$funded_amnt>5000 & clean.data$funded_amnt<=15000,"Medium",
ifelse(clean.data$funded_amnt>15000 & clean.data$funded_amnt<=25000,"High","VeryHigh")))
describe(clean.data$installment)
clean.data$bin_installment<-ifelse(clean.data$installment<=200,"Small",
ifelse(clean.data$installment>200 & clean.data$installment<=400,"Medium",
ifelse(clean.data$installment>400 & clean.data$installment<=600,"High","VeryHigh")))
defaulte.clean.data <- filter(clean.data,clean.data$loan_status %in% c("Charged Off"))
univariate_categorical(defaulte.clean.data,defaulte.clean.data$bin_installment,"bin based on installment and defaulters")
describe(clean.data$annual_inc)
clean.data$bin_annual_inc<-ifelse(clean.data$annual_inc<=50000,"Small",
ifelse(clean.data$annual_inc>50000 & clean.data$annual_inc<=100000,"Medium",
ifelse(clean.data$annual_inc>100000 & clean.data$annual_inc<=150000,"High","VeryHigh")))
defaulte.clean.data <- filter(clean.data,clean.data$loan_status %in% c("Charged Off"))
univariate_categorical(defaulte.clean.data,defaulte.clean.data$bin_annual_inc,"bin based on installment and defaulters")
clean.data$emp_length <- extract_numeric(clean.data$emp_length)
describe(clean.data$emp_length) # 50% clean.data applicants are less than or having 4 years of experience
# Missing values in employement length
sum(is.na(clean.data))/nrow(clean.data)*100 # 2.37%
# Rather than treating these missing values, best is to get rid of these observations.
clean.data <- data.frame(na.omit(clean.data))
clean.data$emp_length <- as.factor(ifelse(clean.data$emp_length<=1,"freshers",ifelse(clean.data$emp_length>1&clean.data$emp_length<=3,"junior",ifelse(clean.data$emp_length>3&clean.data$emp_length<=7,"senior","expert"))))
# Let's see the distribution again:
product_wise(clean.data,clean.data$emp_length,"Applicant Experience Distribution- Top-4 products")
product_wise_fill(clean.data,clean.data$emp_length,"Applicant Experience Distribution- Top-4 products")
continuous_dist <- function(dataset,con_var,var_name){
con_summary <- tapply(con_var, clean.data$purpose, summary)
P1 <- dataset %>% ggplot(aes(x=con_var)) + geom_line(stat = 'density',color='red')+facet_wrap(~purpose)+ggtitle(var_name)+xlab(var_name)
return(P1)
}
continuous_dist(clean.data,clean.data$loan_amnt,"loan Distribution")
continuous_dist(clean.data,clean.data$funded_amnt,"loan Distribution")
clean.data$loanbyfunded <- clean.data$funded_amnt/clean.data$loan_amnt
continuous_dist(clean.data,clean.data$loanbyfunded,"ratio of loanamt/fundedamt")
continuous_dist(clean.data,clean.data$int_rate,"interest Distribution")
continuous_dist(clean.data,clean.data$annual_inc,"annual Distribution")
# Feature correlations to the purpose
correlation_plot<- function(pur,textforheading){
clean.data.numeric <- pur
clean.data.numeric$loan_status <- ifelse(clean.data.numeric$loan_status=="Charged Off",1,0)
clean.data.numeric[sapply(clean.data.numeric, is.character)] <- lapply(clean.data.numeric[sapply(clean.data, is.character)],
as.factor)
clean.data.numeric[sapply(clean.data.numeric, is.integer)] <- lapply(clean.data.numeric[sapply(clean.data, is.integer)],
as.numeric)
clean.data.numeric[sapply(clean.data.numeric, is.factor)] <- lapply(clean.data.numeric[sapply(clean.data, is.factor)],
as.numeric)
clean.data.numeric$issue_d <- NULL
clean.data.numeric$sub_grade <- NULL
clean.data.numeric$purpose <- NULL
clean.data.numeric$loan_statusChrgedOff <- NULL
clean.data.numeric$loan_statusCurrent <- NULL
clean.data.numeric$pymnt_plan <- NULL
clean.data.numeric$loan_amnt<-NULL
clean.data.numeric$funded_amnt_inv <-NULL
clean.data.numeric$dti<- NULL
clean.data.numeric$funded_amnt <- NULL
clean.data.numeric$installment <- NULL
clean.data.numeric$annual_inc <- NULL
clean.data.numeric$emp_length <- NULL
clean.data.numeric$int_rate <- NULL
corrr_analysis <- clean.data.numeric %>%
correlate() %>%
focus(loan_status) %>%
rename(feature = rowname) %>%
arrange(abs(loan_status)) %>%
mutate(feature = as.factor(feature))
corrr_analysis
# Correlation visualization
plot <- corrr_analysis %>%
ggplot(aes(x = loan_status, y = fct_reorder(feature, desc(loan_status)))) +
geom_point() +
# Positive Correlations - Contribute to churn
geom_segment(aes(xend = 0, yend = feature),
color = palette_light()[[2]],
data = corrr_analysis %>% filter(loan_status > 0)) +
geom_point(color = palette_light()[[2]],
data = corrr_analysis %>% filter(loan_status > 0)) +
# Negative Correlations - Prevent churn
geom_segment(aes(xend = 0, yend = feature),
color = palette_light()[[1]],
data = corrr_analysis %>% filter(loan_status < 0)) +
geom_point(color = palette_light()[[1]],
data = corrr_analysis %>% filter(loan_status < 0)) +
# Vertical lines
geom_vline(xintercept = 0, color = palette_light()[[5]], size = 1, linetype = 2) +
geom_vline(xintercept = -0.25, color = palette_light()[[5]], size = 1, linetype = 2) +
geom_vline(xintercept = 0.25, color = palette_light()[[5]], size = 1, linetype = 2) +
# Aesthetics
theme_tq() +
labs(title = textforheading,
subtitle = "Positive Correlations (contribute to defaulters), Negative Correlations (prevent defaulter)",
y = "Feature Importance")
return(plot)
}
c("debt_consolidation","credit_card","home_improvement","major_purchase")
correlation_plot(filter(clean.data,clean.data$purpose %in% c("major_purchase")),"Correlation Analysis for major purchase")
#contribution apart from that other major variables that contribute to correlation in
#major purchase are
# 1)recoverries
# 2)collection_recovery_fee
# 3)bin_int_rate
# 4)grade
# 5)bin_dti
# 6)year
# 7)home_ownership
#
correlation_plot(filter(clean.data,clean.data$purpose %in% c("home_improvement")),"Correlation Analysis for home Improvement")
#contribution apart from that other major variables that contribute to correlation in
#home improvement are
# 1)recoverries
# 2)collection_recovery_fee
# 3)bin_int_rate
# 4)grade
# 5)bin_funed_amt_invested
# 6)term
# 7)bin_dti
#
correlation_plot(filter(clean.data,clean.data$purpose %in% c("credit_card")),"Correlation Analysis for Credit Card")
#contribution apart from that other major variables that contribute to correlation in
#credit card are
# 1)recoverries
# 2)bin_funed_amt_invested
# 3)term
# 4)collection_recovery_fee
# 5)bin_dti
# 6)bin_int_rate
# 7)grade
#
correlation_plot(filter(clean.data,clean.data$purpose %in% c("debt_consolidation")),"Correlation Analysis for Debt Consolidation")
#contribution apart from that other major variables that contribute to correlation in
#debt_consolidation are
# 1)recoverries
# 2)term
# 3)bin_dti
# 4)bin_int_rate
# 5)grade
# 6)bin_funed_amt_invested
# 7)collection_recovery_fee
#
clean.data$loan_statusChrgedOff
correlation_plot(clean.data,"Correlation Analysis")
clean.data$loan_status <- ifelse(clean.data$loan_status=="Charged Off",1,0)
univariate_categorical(clean.data,clean.data$loan_status,"Deault Distribution of charged off and non chaged off")
